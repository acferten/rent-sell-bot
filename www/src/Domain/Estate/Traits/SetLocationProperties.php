<?php

namespace Domain\Estate\Traits;

use Domain\Estate\Actions\SendPreviewMessageAction;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;
use SergiX44\Nutgram\Nutgram;

trait SetLocationProperties
{
    public function setLocationProperties(Nutgram $bot): void
    {
        $locationiq_key = env('LOCATIONIQ_KEY');
        $response = Http::withHeaders([
            "Accept-Language" => "ru",
        ])->get("https://eu1.locationiq.com/v1/reverse.php?key={$locationiq_key}&lat={$this->estate->latitude}&lon={$this->estate->longitude}&format=json")->collect();

        if (array_key_exists('error', $response->toArray())) {
            $bot->sendMessage(
                text: "<b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>
üìç –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
üëâ –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ Google Maps –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—É—â—É—é –ì–µ–æ–ø–æ–∑–∏—Ü–∏—é.",
                parse_mode: 'html'
            );

            $this->next('change');
        }
        $response = $response->get('address');

        $this->estate->update([
            'country' => $response['country'] ?? null,
            'state' => $response['state'] ?? null,
            'county' => $response['county'] ?? null,
            'town' => $response['city'] ?? ($response['town'] ?? ($response['village'] ?? null)),
            'district' => $response['city_district'] ?? null,
            'street' => $response['road'] ?? null,
        ]);

        if (array_key_exists('house_number', $response)) {
            $this->estate->update([
                'house_number' => $response['house_number'],
            ]);
        }
    }
}
