<?php

namespace Domain\Estate\ViewModels;

use Domain\Estate\DataTransferObjects\EstateData;
use Domain\Estate\Enums\DealTypes;
use Domain\Estate\Models\Estate;
use Domain\Estate\Models\EstateType;
use Domain\Shared\ViewModels\ToStringInterface;
use Illuminate\Support\Facades\Log;

class PreviewCreatedEstateViewModel implements ToStringInterface
{
    public static function get(Estate $estate): string
    {
        $data = EstateData::from($estate);
        $estate_type = EstateType::where(['id' => $data->house_type_id])->first()->title;
        $periods = implode(', ', $estate->prices->map(fn($price) => $price->period)->toArray());

        $preview = "–í—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å! ü•≥\n–í–∞—à –æ–±—ä–µ–∫—Ç:\n\n" .
            "<b>–°–¥–µ–ª–∫–∞:</b> {$data->deal_type->value}\n" .
            "<b>–í–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å:</b> {$data->includes}\n" .
            "<b>–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b>  {$estate_type}\n" .
            "<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {$data->description}\n\n";

        $preview .= $data->deal_type == DealTypes::rent ? "<b>–ü–µ—Ä–∏–æ–¥ –∞—Ä–µ–Ω–¥—ã:</b> {$periods}\n<b>–¶–µ–Ω–∞ –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥:</b> {$data->period_price}\n"
            : "<b>–¶–µ–Ω–∞:</b> {$data->price}\n";

        return $preview;
    }
}
