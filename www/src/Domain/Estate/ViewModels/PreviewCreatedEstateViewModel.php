<?php

namespace Domain\Estate\ViewModels;

use Domain\Estate\DataTransferObjects\EstateData;
use Domain\Estate\Enums\DealTypes;
use Domain\Estate\Models\Estate;
use Domain\Estate\Models\EstateType;
use Domain\Shared\ViewModels\ToStringInterface;
use Illuminate\Support\Facades\Log;

class PreviewCreatedEstateViewModel implements ToStringInterface
{
    public static function get(Estate $estate): string
    {
        $data = EstateData::from($estate);
        $estate_type = EstateType::where(['id' => $data->house_type_id])->first()->title;
        $price = '';

        if ($data->deal_type == DealTypes::rent) {
            foreach ($data->periods as $rent_periods) {
                $price .= "<b>üí∞ –¶–µ–Ω–∞ –∑–∞ {$rent_periods->period->value}:</b> {$rent_periods->price}\n";
            }
        } else {
            $price = "<b>üí∞ –¶–µ–Ω–∞:</b> {$data->price}";
        }

        return "–í—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å! ü•≥\n–í–∞—à –æ–±—ä–µ–∫—Ç:\n\n" .
            "<b>ü§ù –°–¥–µ–ª–∫–∞:</b> {$data->deal_type->value}\n" .
            "<b>üéØ –í–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å:</b> {$data->includes}\n" .
            "<b>üè° –¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b> {$estate_type}\n" .
            $price;
    }
}
