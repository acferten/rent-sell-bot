<?php

namespace Domain\Estate\Menu;

use Domain\Estate\DataTransferObjects\EstateData;
use Domain\Estate\Enums\DealTypes;
use Domain\Estate\Models\Estate;
use Domain\Estate\Models\EstateType;
use Domain\Shared\Models\Actor\User;
use Illuminate\Support\Facades\Log;
use SergiX44\Nutgram\Conversations\InlineMenu;
use SergiX44\Nutgram\Nutgram;
use SergiX44\Nutgram\Telegram\Types\Keyboard\InlineKeyboardButton;
use SergiX44\Nutgram\Telegram\Types\Keyboard\KeyboardButton;
use SergiX44\Nutgram\Telegram\Types\Keyboard\ReplyKeyboardMarkup;
use SergiX44\Nutgram\Telegram\Types\Keyboard\ReplyKeyboardRemove;

class CreateEstateSecondStep extends InlineMenu
{
    public Estate $estate;
    public EstateData $data;

    public function start(Nutgram $bot): void
    {
        $bot->sendMessage(
            text: "<b>–®–∞–≥ 2 –∏–∑ 3</b>
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞.",
            parse_mode: 'html'
        );

        $this->next('location');
    }

    public function location(Nutgram $bot): void
    {
        $location = $bot->message()->location;

        $this->estate = Estate::where(['user_id' => $bot->userId()])
            ->latest()->first();

        $this->estate->update([
            'latitude' => $location->latitude,
            'longitude' => $location->longitude
        ]);;

        $bot->sendMessage('–õ–æ–∫–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ –æ–±—ä–µ–∫—Ç—É.');

        $bot->sendMessage(
            text: "<b>–®–∞–≥ 3 –∏–∑ 3</b>
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram.",
            parse_mode: 'html',
            reply_markup: ReplyKeyboardMarkup::make(resize_keyboard: true, one_time_keyboard: true)->addRow(
                KeyboardButton::make('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ üìû', request_contact: true)
            ),
        );

        $this->next('contact');
    }

    public function contact(Nutgram $bot): void
    {
        $this->data = EstateData::from($this->estate);
        $estate_type = EstateType::where(['id' => $this->data->house_type_id])->first()->title;
        $periods = implode(', ', $this->estate->prices->map(fn($price) => $price->period)->toArray());

        $preview = "–ü—Ä–µ–≤—å—é:\n" .
            "<b>–°–¥–µ–ª–∫–∞:</b> {$this->data->deal_type->value}\n" .
            "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª–µ–Ω</b>: {$this->data->bedrooms}\n" .
            "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç</b>: {$this->data->bathrooms}\n" .
            "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤</b>: {$this->data->conditioners}\n" .
            "<b>–í–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å</b>: {$this->data->includes}\n" .
            "<b>–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏:</b>:  {$estate_type}\n" .
            "<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {$this->data->description}\n";

        $preview .= $this->data->deal_type == DealTypes::rent ? "<b>–ü–µ—Ä–∏–æ–¥ –∞—Ä–µ–Ω–¥—ã:</b> {$periods}\n<b>–¶–µ–Ω–∞ –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥</b>: {$this->data->period_price}\n"
            : "<b>–¶–µ–Ω–∞:</b> {$this->data->price}\n";

        Log::debug($preview);

        User::where(['id' => $bot->userId()])
            ->first()
            ->update([
                'phone' => $bot->message()->contact->phone_number
            ]);

        $bot->sendMessage('–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.',
            reply_markup: ReplyKeyboardRemove::make(true));

        $this->clearButtons()
            ->menuText($preview, ['parse_mode' => 'html'])
            ->addButtonRow(InlineKeyboardButton::make('–í—Å–µ –≤–µ—Ä–Ω–æ, –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ ‚úÖ', callback_data: 'payment@handlePayment'))
//            ->addButtonRow(InlineKeyboardButton::make('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞ ‚úçÔ∏è', callback_data: 'changeEstate@handleChangeFirstStep'))
//            ->addButtonRow(InlineKeyboardButton::make('–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞ ‚úçÔ∏è', callback_data: 'changeLocation@handleChangeLocation'))
//            ->addButtonRow(InlineKeyboardButton::make('–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üëÄ', callback_data: 'images@handleViewImages'))
//            ->addButtonRow(InlineKeyboardButton::make('–û—Ç–º–µ–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è ‚ùå', callback_data: 'cancel@handleCancelEstate'))
            ->showMenu();
    }

    public function handlePayment(Nutgram $bot): void
    {
        $this->clearButtons()
            ->menuText("<b>–í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞</b>\n\n–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–± –∞—Ä–µ–Ω–¥–µ –≤–∞—à–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞.\n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —Ä–∞–∑–º–µ—â–∞—è –Ω–∞ –º–µ—Å—è—Ü –≤—ã —ç–∫–æ–Ω–æ–º–∏—Ç–µ 50%.\n\n–ü—Ä–∞–π—Å\n–ù–∞ 5 –¥–Ω–µ–π - 10$\n–ù–∞ 30 –¥–Ω–µ–π - 30$\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?",
                ['parse_mode' => 'html'])
            ->addButtonRow(InlineKeyboardButton::make('–ù–∞ 5 –¥–Ω–µ–π', callback_data: '5days@handlePaymentPlan'))
            ->addButtonRow(InlineKeyboardButton::make('–ù–∞ 30 –¥–Ω–µ–π', callback_data: '30days@handlePaymentPlan'))
            ->showMenu();
    }

    public function handlePaymentPlan(Nutgram $bot): void
    {
        if ($bot->callbackQuery()->data == '5days') {
            $this->clearButtons()
                ->menuText("<b>–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –Ω–∞ 5 –¥–Ω–µ–π.</b>\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è 10$\n\n–í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:\n\n–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ —Ä—É–±–ª—è—Ö. –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –ß–ß–ß —Ä—É–±–ª–µ–π. (–¥–µ–ª–∞–µ–º —Ñ–æ—Ä–º—É–ª—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏)\n\n–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫—É—é –∫–∞—Ä—Ç—É –±–∞–Ω–∫–∞ BRI –≤ —Ä—É–ø–∏—è—Ö. –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ø–Ø–Ø —Ä—É–ø–∏–π. (–¥–µ–ª–∞–µ–º —Ñ–æ—Ä–º—É–ª—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏)\n\n–ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ –æ–ø–ª–∞—Ç–∏—Ç—å?",
                    ['parse_mode' => 'html'])
                ->addButtonRow(InlineKeyboardButton::make('–ù–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ —Ä—É–±–ª—è—Ö', callback_data: 'tinkoff5@handlePaymentBank'))
                ->addButtonRow(InlineKeyboardButton::make('–ù–∞ –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫—É—é –∫–∞—Ä—Ç—É –≤ —Ä—É–ø–∏—è—Ö', callback_data: 'indonesia5@handlePaymentBank'))
                ->showMenu();
        } else if ($bot->callbackQuery()->data == '30days') {
            $this->clearButtons()
                ->menuText("<b>–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –Ω–∞ 30 –¥–Ω–µ–π.</b>\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è 30$\n\n–í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:\n\n–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ —Ä—É–±–ª—è—Ö. –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –ß–ß–ß —Ä—É–±–ª–µ–π. (–¥–µ–ª–∞–µ–º —Ñ–æ—Ä–º—É–ª—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏)\n\n–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫—É—é –∫–∞—Ä—Ç—É –±–∞–Ω–∫–∞ BRI –≤ —Ä—É–ø–∏—è—Ö. –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ø–Ø–Ø —Ä—É–ø–∏–π. (–¥–µ–ª–∞–µ–º —Ñ–æ—Ä–º—É–ª—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏)\n\n–ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ –æ–ø–ª–∞—Ç–∏—Ç—å?",
                    ['parse_mode' => 'html'])
                ->addButtonRow(InlineKeyboardButton::make('–ù–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ —Ä—É–±–ª—è—Ö', callback_data: 'tinkoff30@handlePaymentBank'))
                ->addButtonRow(InlineKeyboardButton::make('–ù–∞ –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫—É—é –∫–∞—Ä—Ç—É –≤ —Ä—É–ø–∏—è—Ö', callback_data: 'indonesia30@handlePaymentBank'))
                ->showMenu();
        }

    }

    public function handlePaymentBank(Nutgram $bot): void
    {
        if ($bot->callbackQuery()->data == 'tinkoff5') {
            $this->clearButtons()
                ->menuText("–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ —Ä—É–±–ª—è—Ö.\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç–µ, –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –≤ —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n\n2200 7007 7932 1818\n\nOlga G.\n\n–°—É–º–º–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ 1000 —Ä—É–±–ª–µ–π.",
                    ['parse_mode' => 'html'])->showMenu();
        } else if ($bot->callbackQuery()->data == 'tinkoff30') {
            $this->clearButtons()
                ->menuText("–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ —Ä—É–±–ª—è—Ö.\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç–µ, –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –≤ —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n\n2200 7007 7932 1818\n\nOlga G.\n\n–°—É–º–º–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ 3000 —Ä—É–±–ª–µ–π.",
                    ['parse_mode' => 'html'])->showMenu();
        } else if ($bot->callbackQuery()->data == 'indonesia5') {
            $this->clearButtons()
                ->menuText("–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–æ–≥–æ –±–∞–Ω–∫–∞ BRI –≤ —Ä—É–ø–∏—è—Ö.\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç–µ, –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –≤ —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n\n4628 0100 4036 508\n\nAnak Agung Gede Adi Semara\n\n–°—É–º–º–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –º–Ω–æ–≥–æ —Ä—É–ø–∏–π.",
                    ['parse_mode' => 'html'])->showMenu();
        } else if ($bot->callbackQuery()->data == 'indonesia30') {
            $this->clearButtons()
                ->menuText("–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–æ–≥–æ –±–∞–Ω–∫–∞ BRI –≤ —Ä—É–ø–∏—è—Ö.\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç–µ, –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –≤ —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n\n4628 0100 4036 508\n\nAnak Agung Gede Adi Semara\n\n–°—É–º–º–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –º–Ω–æ–≥–æ30 —Ä—É–ø–∏–π.",
                    ['parse_mode' => 'html'])->showMenu();
        }

        $this->next('getPaymentCheque');
    }

    public function getPaymentCheque(Nutgram $bot): void
    {
        $bot->sendMessage('test', '-1001875753187');
        $bot->forwardMessage('-1001875753187', $bot->chatId(), $bot->message()->message_id);
    }

    public function none(Nutgram $bot)
    {
        $this->end();
    }
}
